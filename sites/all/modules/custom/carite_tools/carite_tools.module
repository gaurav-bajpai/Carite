<?php

/**
 * Implements hook_menu().
 */
function carite_tools_menu() {
    $items = array();
    $items['admin/config/carite'] = array(
      'title' => t('Carite Settings'),
      'description' => t('Configure Carite tools Settings'),
      'page callback' => 'carite_tools_settings',
      'access arguments' => array('access administration pages'),
      'file' => 'carite_tools.admin.inc',
    );
    $items['carite-get-popup/%'] = array(
      'description' => t('This returns the text and uid of the node edited.'),
      'page callback' => 'carite_tools_get_popup_content',
      'page arguments' => array(1),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
    );
    return $items;
}

/**
 * Implements hook_node_insert().
 */
function carite_tools_node_insert($node) {
    switch ($node->type) {
        case 'deal_management':
            carite_tools_create_stipulation($node);
            break;
        default:
            # code...
            break;
    }
}

/**
 * @desc Auto node creation for stipulation.
 */
function carite_tools_create_stipulation($deal_node) {
    global $user;
    try {
        $terms = taxonomy_get_tree(2);
        foreach ($terms as $key => $value) {
            $node = new stdClass();
            $node->title = $deal_node->title . '-' . $value->name;
            $node->type = "stipulation_status";
            node_object_prepare($node); // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().
            $node->language = LANGUAGE_NONE; // Or e.g. 'en' if locale is enabled
            $node->uid = $user->uid;
            $node->status = 1; //(1 or 0): published or not
            $node->promote = 0; //(1 or 0): promoted to front page
            $node->comment = 0; // 0 = comments disabled, 1 = read only, 2 = read/write
            // Term reference (taxonomy) field
            $node->field_refer_stipulation['und']['0']['tid'] = $value->tid;
            // Node reference field
            $node->field_refer_deal['und'][0]['nid'] = $deal_node->nid;
            $node = node_submit($node); // Prepare node for saving
            node_save($node);
        }
    }
    catch (Exception $e) {

    }
}

/**
 * Implements hook_form_alter().
 */
function carite_tools_form_alter(&$form, &$form_state, $form_id) {

}

/**
 * Implements hook_node_update().
 */
function carite_tools_node_update($node) {
    if ($node->type == 'stipulation_status') {
        $status = $node->field_status[LANGUAGE_NONE][0]['value'];
        if ($status == "Closed") {
            $deal_id = $node->field_refer_deal[LANGUAGE_NONE][0]['nid'];
            if (_get_deal_stipulations_status($deal_id)) {
                $node_deal = node_load($deal_id);
                $node_deal->field_deal_status[LANGUAGE_NONE][0]['value'] = 'funded';
                $node_deal->field_date_funded[LANGUAGE_NONE][0]['value'] = date('Y-m-d H:i:s', strtotime('now'));
                node_save($node_deal);
            }
        }
    }
}

/**
 * Function to get deal stipulation's status for Closed stipulations
 * @param type $deal_id
 * @return boolean
 */
function _get_deal_stipulations_status($deal_id) {
    // Count how many stipulations attached with given deal
    $query_stipulations = db_select('field_data_field_refer_deal', 'rd')
        ->fields('rd')
        ->condition('rd.field_refer_deal_nid', $deal_id);
    $result_stipulations = $query_stipulations->execute()->rowCount();
    // Count how many stipulation's status is closed for given deal
    $query_status = db_select('field_data_field_status', 'fs');
    $query_status->join('field_data_field_refer_deal', 'rd', 'rd.entity_id = fs.entity_id');
    $query_status->fields('fs');
    $query_status->condition('rd.field_refer_deal_nid', $deal_id);
    $query_status->condition('fs.field_status_value', 'Closed');
    $result_status = $query_status->execute()->rowCount();
    if ($result_stipulations == $result_status) {
        return TRUE;
    }
    else {
        return FALSE;
    }
}

/**
 *
 */
function carite_tools_get_popup_content() {
  $nid = arg(1);
  $text = '';
  if (isset($nid)) {
    $uid = _get_last_user_from_node($nid);
    $name = carite_tools_get_user_details($uid, 'name');
    $text = t('This deal is being edited by :name', array(':name' => $name));
  }
  else {
   $text = t('AJAX 404');
  }
  print $text;
  exit;
}

/**
 * @desc Get username or email-id
 * @param $uid
 */
function carite_tools_get_user_details($uid = 0, $get_type = 'mail') {
  if ($uid != 0) {
    try {
      $query = db_select('users', 'u')
        ->fields('u', array($get_type))
        ->condition('uid', $uid);
      $result = $query->execute()->fetchField();
      return $result;
    } catch (Exception $e) {}
  }
}
